<?php/*Plugin Name: Active Directory ThumbnailsPlugin URI: http://mirwindsor.comDescription: This plugin takes active directory thumbnail octet strings and converts them to jpeg files stored on the server.Version: 0.1Author: Omar MirAuthor URI: http://mirwindsor.comLicense: GPL3*//** * Created by JetBrains PhpStorm. * User: Omar * Date: 25/06/12 * Time: 6:46 PM * To change this template use File | Settings | File Templates. *//*  Copyright 2012  Omar Mir  (email : omar@mirwindsor.com)    This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License, version 3, as    published by the Free Software Foundation.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA*//* Runs when plugin is activated */register_activation_hook(__FILE__,'adt_install');/* Runs on plugin deactivation*/register_deactivation_hook( __FILE__, 'adt_remove' );function adt_install() {    /* Creates new database field */    add_option('adt_ad_thumbnail', 'adi_thumbnailphoto', '', 'yes');    mkdir(ABSPATH . 'wp-content/uploads/active-directory-thumbnails', 0755);}function adt_remove() {    /* Deletes the database field */    delete_option('adt_ad_thumbnail');    adt_delete_folder(ABSPATH . 'wp-content/uploads/active-directory-thumbnails');    /* Deletes all database links to generated thumbs */    $aUsersID = adt_get_all_users();    foreach ( $aUsersID as $iUserID ) :        delete_user_meta( $iUserID, adt_user_photo_url );    endforeach; // end the users loop.}/* Adds the options page to the users menu: http://codex.wordpress.org/Adding_Administration_Menus */function adt_admin_actions() {    add_users_page("Active Directory Thumbnails Options", "Active Directory Thumbnails", 1, "active-directory-thumbnails", "adt_admin");}/*Included all backend options on a different page */function adt_admin() {    include('php/options.php');}/*Adding to admin menu */add_action('admin_menu', 'adt_admin_actions');/*Get All Users */function adt_get_all_users() {    /*        First we set how we'll want to sort the user list.        You could sort them by:        ------------------------        * ID - User ID number.        * user_login - User Login name.        * user_nicename - User Nice name ( nice version of login name ).        * user_email - User Email Address.        * user_url - User Website URL.        * user_registered - User Registration date.    */    $szSort = "user_nicename";    /* Now we build the custom query to get the ID of the users. */    global $wpdb;    $aUsersID = $wpdb->get_col( $wpdb->prepare(        "SELECT $wpdb->users.ID FROM $wpdb->users ORDER BY %s ASC"        , $szSort ));    return $aUsersID;}/* Delete folder and contents */function adt_delete_folder($directory, $empty = false) {    if(substr($directory,-1) == "/") {        $directory = substr($directory,0,-1);    }    if(!file_exists($directory) || !is_dir($directory)) {        return false;    } elseif(!is_readable($directory)) {        return false;    } else {        $directoryHandle = opendir($directory);        while ($contents = readdir($directoryHandle)) {            if($contents != '.' && $contents != '..') {                $path = $directory . "/" . $contents;                if(is_dir($path)) {                    deleteAll($path);                } else {                    unlink($path);                }            }        }        closedir($directoryHandle);        if($empty == false) {            if(!rmdir($directory)) {                return false;            }        }        return true;    }}function adt_get_user_photo_url($userid) {    return get_usermeta( $userid, 'adt_user_photo_url' );}?>